
@{
    ViewBag.Title = "RetrievalGeneration";
}

@model List<ADProjGp2_LogicUStationeryStore.Models.RetrievalListModel>
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>RetrievalList</title>
    <link href="~/Content/css/Button-Antiman.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/Requisition.css" rel="stylesheet" type="text/css" />
    @*<link href="~/Content/css/RetrievalList.css" rel="stylesheet" type="text/css"/>*@
</head>
<body>
    <br />
    <ul id="myTab" class="nav nav-pills" style="height:80px;margin:auto;margin-left:25px;">
        <li class="active"> <a href="#RetrievalList" data-toggle="tab">Retrieval List</a></li>
        <li><a href="#RetrievalListSummary" data-toggle="tab">Retrieval List Summary</a></li>
    </ul>
    <div id="myTabContent" class="tab-content" style="border:hidden;background-color:white;">
        <!--Tab for RL details-->
        <div class="tab-pane fade in active" id="RetrievalList">
            <h1>Stationery Retrieval List</h1>
            @using (@Html.BeginForm())
            {
                <div>
                    <div>
                        <table id="RHlist" style="min-width:1021px;">
                            <tr style="font-size:12px;font-weight:300;">
                                <th style="width:70px;">Bin# </th>
                                <th style="width:140px;">Stationery<br />Description</th>
                                <th style="width:145px;">Department</th>
                                <th>Approval<br />Date</th>
                                <th>Requisition ID</th>
                                <th>Needed<br />Quantity</th>
                                <th>Advised<br />Quantity</th>
                                <th>User / Special <br />Adjusted Quantity</th>
                                <th>Inventory<br />Stock</th>
                            </tr>

                            @for (int i = 0; i < Model.Count; i++)
                            {
                                <tr>
                                    <td>@Model[i].itemBin</td>
                                    @Html.HiddenFor(m => m[i].itemBin)
                                    <td>@Model[i].itemName</td>
                                    @Html.HiddenFor(m => m[i].itemName)
                                    <td>@Model[i].department</td>
                                    @Html.HiddenFor(m => m[i].department)
                                    <td>@Model[i].approvalDate</td>
                                    @Html.HiddenFor(m => m[i].approvalDate)
                                    <td>@Model[i].requisitionID</td>
                                    @Html.HiddenFor(m => m[i].requisitionID)
                                    <td>@Model[i].reqQty</td>
                                    @Html.HiddenFor(m => m[i].reqQty)
                                    <td>@Model[i].allocateQty</td>
                                    @Html.HiddenFor(m => m[i].allocateQty)
                                    @if (Model[i].requisitionID.Contains("Special"))
                                    {
                                        <td id="colQuantity">@Model[i].adjQty</td>
                                        @Html.HiddenFor(m => m[i].adjQty)
                                    }
                                    else
                                    {
                                        <td id="colQuantity">@Html.EditorFor(m => m[i].adjQty, new { htmlAttributes = new { style = "width:100%;" ,name= "adjQtyInput" } })</td>
                                        @Html.HiddenFor(m => m[i].adjQty)
                                    }
                                    <td>@Model[i].stockQty</td>
                                    @Html.HiddenFor(m => m[i].stockQty)
                                    @Html.HiddenFor(m => m[i].IsAdjusted)
                                    @Html.HiddenFor(m => m[i].itemID)
                                    @Html.HiddenFor(m => m[i].remark)
                                </tr>
                            }
                        </table>
                    </div>

                    <div class="button-container-right">
                        <button type="submit" value="RetrievalSave" name="RetrievalSave" id="btnSave" class="button button--size-m button--antiman button--round-m button--text-medium"> Save</button>
                        &nbsp;&nbsp;
                        <button type="submit" value="ConfirmRetrievalList" name="ConfirmRetrievalList" id="btnConfirm" formaction="ConfirmRetrievalList" class="button button--size-m button--antiman button--round-m button--text-medium"> Confirm</button>
                    </div>
                </div>
            }
            </div>



    <!--Tab for RL Summary-->
        <div class="tab-pane fade in" id="RetrievalListSummary">
            <h1>Stationery Retrieval List Summary</h1>
            @using ADProjGp2_LogicUStationeryStore.Models
            @{
                List<RetrievalListSummaryModel> retSum = (List<RetrievalListSummaryModel>)ViewBag.retSum;
            }
                <div>
                    <table id="RDlist" style="min-width:1110px;">
                        <tr>
                            <th style="width:80px;">Bin# </th>
                            <th>Item Code</th>
                            <th>Stationery Description</th>
                            <th>Retrieve Quantity</th>
                            <th>Inventory Quantity</th>
                        </tr>

                        @for (int j = 0; j < retSum.Count; j++)
                        {
                            <tr>
                                <td>@retSum[j].itemBin</td>
                                <td>@retSum[j].itemID</td>
                                <td>@retSum[j].itemName</td>
                                <td>@retSum[j].retrieveQty</td>
                                <td>@retSum[j].stockQty</td>
                            </tr>
                        }
                    </table>
                </div>
            @{
                if (ViewBag.IsRetSaved != null)
                {
                    TempData["IsRetSaved"] = ViewBag.IsRetSaved;
                }
                else
                {
                    TempData["IsRetSaved"] = true;
                }
            }
        </div>


        </div>


    <script>


        //limit adj QTY
        var ipt = document.getElementsByName("adjQtyInput");
        for (var i = 0; i < ipt.length; i++) {
            ipt[i].addEventListener("keyup", function () {
                //this.value = this.value.replace(/\./, "");
                this.value = this.value.replace(/\D/g, "");
                this.value = this.value.replace("-", "");
            });
        }

        btnSave.addEventListener("click", function () {
            for (var i = 0; i < ipt.length; i++) {
                if (ipt[i].value == "-") {
                    ipt[i].value = null;
                    //alert(ipt[i].value);
                }
            }
        });


    </script>
        </body>
</html>