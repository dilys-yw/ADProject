
@model Dictionary<string,string>

@{
    ViewBag.Title = "AuthorityAndRepresentative";
}


<DOCTYPE html>
    <html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Delegate Authority</title>
        <link href="~/Content/css/Button-Antiman.css" rel="stylesheet" type="text/css" />
        <link href="~/Content/css/Requisition.css" rel="stylesheet" type="text/css" />
        <script src="~/Content/js/Autocomplete.js" type="text/javascript"></script>
        <script src="~/Content/js/AuthoriseNRep.js" type="text/javascript"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <style>
            /** {
                box-sizing: border-box;
            }*/

            /*body {
                font: 16px Arial;
            }*/

            .autocomplete {
                /*the container must be positioned relative:*/
                position: relative;
                display: inline-block;
            }

            input {
                border: 1px solid transparent;
                background-color: #f1f1f1;
                padding: 10px;
                font-size: 16px;
            }

                input[type=text] {
                    /*background-color: #f1f1f1;*/
                    width: 100%;
                }

                input[type=submit] {
                    background-color: DodgerBlue;
                    color: #fff;
                    cursor: pointer;
                }

            .autocomplete-items {
                position: absolute;
                border: 1px solid #d4d4d4;
                border-bottom: none;
                border-top: none;
                z-index: 99;
                /*position the autocomplete items to be the same width as the container:*/
                top: 100%;
                left: 0;
                right: 0;
            }

                .autocomplete-items div {
                    padding: 10px;
                    cursor: pointer;
                    background-color: #fff;
                    border-bottom: 1px solid #d4d4d4;
                }

                    .autocomplete-items div:hover {
                        /*when hovering an item:*/
                        background-color: #e9e9e9;
                    }

            .autocomplete-active {
                /*when navigating through the items using the arrow keys:*/
                background-color: DodgerBlue !important;
                color: #ffffff;
            }

            input[type=date] {
                width: 160px;
                /*margin-right: 20px;*/
            }
            #RDlist{
                min-width:800px;
            }
            fieldset {
                /*padding: .35em 3em .75em;*/
                padding: 5px 3em 5px;
                margin: 0 12.5%;
                border: 1px solid #c0c0c0;
                position: relative;
            }

            legend {
                padding: 3px;
                width: auto;
                border: 0;
            }
            /*style="border:0.5px solid black;padding:20px;"*/
        </style>

    </head>
    <body>
        <br />
        <ul id="myTab" class="nav nav-pills" style="height:80px;margin:auto;margin-left:25px;">
            <li id="li-Authority"class="active"> <a href="#Authority" data-toggle="tab">Delegate Authority</a></li>
            <li id="li-Representative"><a href="#Representative" data-toggle="tab">Assign Representative</a></li>
        </ul>
        <div id="myTabContent" class="tab-content" style="border:hidden">
            <!--Tab for Delegate Authority-->
            <div class="tab-pane fade in active" id="Authority">
                <h1>Delegate Authority</h1>
                <fieldset style="min-width: 680px;">
                    <legend>Current Authority Info</legend>
                    <form action="CancelAuthP" method="get">
                        <br />
                        <table id="RDinfo" style="width:98%">
                            <tr style="height:50px;">
                                @{
                                    //unpacking authorised person details
                                    Dictionary<string, string> authorisedPerson = (Dictionary<string, string>)ViewBag.authorisedPerson;
                                    string AuthorisedPersonName = Model[authorisedPerson["AuthorisedPax"]];
                                }
                                @{
                                    //dealing with return errors
                                    string returnMessageA = "";
                                    string returnMessageR = "";
                                    if (Session["MessageBack"].ToString() == "")
                                    {
                                        returnMessageA = "";
                                        returnMessageR = "";
                                    }
                                    else
                                    {
                                        if (Session["AuthPStatus"] != null)
                                        {
                                            if (!(bool)Session["AuthPStatus"])
                                            {
                                                returnMessageA = Session["MessageBack"].ToString();
                                            }
                                        }
                                        if (Session["RepStatus"] != null)
                                        {
                                            if (!(bool)Session["RepStatus"])
                                            {
                                                returnMessageR = Session["MessageBack"].ToString();
                                            }
                                        }
                                    }
                                }
                                <td class="col1" style="padding-left:15px">Employee :</td>
                                <td class="col2">@AuthorisedPersonName</td>
                            </tr>
                            <tr style="height:50px;">
                                <td class="col1" style="padding-left:15px">Valid Period:</td>
                                <td class="col2"><span id="dateBegin">@authorisedPerson["ValidStart"]</span> to <span id="dateEnd">@authorisedPerson["ValidEnd"]</span></td>
                            <tr />
                            <tr>
                                <td class="col1" colspan="2">
                                    <div class="button-container-right" style="padding:5px 2px;margin-right:1%;">
                                        <button type="submit" value="cancel" class="button button--size-m button--antiman button--round-m button--text-medium" style="margin-right:initial;" id="btnCancelAuth" onclick="return cancelAuthNRep()"><i></i><span>Cancel Current Authorised Person</span></button>
                                        @*style="margin:0 auto;padding:1.5px 10px 1.5px 10px;height:50px;"*@
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </form>
                </fieldset>
                <br />
                <hr />
                <br />
                <form name="authPForm" autocomplete="off" onsubmit="return validateAuthP()" action="AuthorisePerson" method="get">
                    <table id="RDlist" style="text-align:center;">
                        <tr>
                            <th style="width:440px;text-align:center;">Authorise Employee Name & No.</th>
                            <th style="text-align:center;">Begin Date</th>
                            <th style="text-align:center;">End Date (Inclusive)</th>
                        </tr>
                        <tr>
                            <td>
                                <div class="autocomplete dropdown" style="width:400px;">
                                    <div class="dropdown-content">
                                        <input style="font-size:16px;" id="authPAuto" type="text" name="authperson" placeholder="Please Select Authorized Employee...">
                                    </div>
                                </div>
                            </td>
                            <td style="text-align:center;"><input type="date" name="begindatep"></td>
                            <td style="text-align:center;"><input type="date" name="enddatep"></td>
                        </tr>
                        <tr>
                    </table>
                    <div class="button-container-right">
                        <button class="button button--size-m button--antiman button--round-m button--text-medium" type="submit" value="Submit"><i></i><span>Delegate</span></button>
                    </div>
                </form>
            </div>


            <!--Tab for Assign Representative-->
            <div class="tab-pane fade in" id="Representative">
                <h1>Assign Representative</h1>
                <fieldset style="min-width: 724px;">
                    <legend>Current Representative Info</legend>
                    <form action="CancelRep" method="get">
                        <table id="RDinfo" style="width:98%;min-width:680px;">
                            <tr>
                                @{
                                    //from unpacked viewbag above
                                    string RepresentativeName;
                                    DateTime date = DateTime.Now;
                                    string strDate;
                                    if (authorisedPerson["Representative"] is null)
                                    {
                                        RepresentativeName = "";
                                        strDate = "";
                                    }
                                    else
                                    {
                                        RepresentativeName = Model[authorisedPerson["Representative"]];
                                        strDate = date.ToString("dd-MM-yyyy");
                                    }
                                }
                                <td class="col1">Employee Number :</td>
                                <td class="col2">@authorisedPerson["Representative"]</td>
                                <td class="col1">Approval Date: </td>
                                <td class="col2">@strDate</td>
                            </tr>
                            <tr>
                                <td class="col1">Employee Name: </td>
                                <td class="col2">@RepresentativeName</td>
                                <td class="col1" colspan="2">
                                    @*<div class="button-container-right" style="padding:5px 2px;margin-right:1%;margin-top:0;margin-bottom:0;">*@
                                        <button type="submit" value="cancel" class="button button--size-m button--antiman button--round-m button--text-medium" style="margin-right:initial;" onclick="return cancelAuthNRep()"><i></i><span>Remove Current Representative</span></button>
                                    @*</div>*@
                                </td>
                            </tr>
                        </table>
                    </form>
                </fieldset>
                <br />
                <hr />
                <br />

                <form id="repForm" onsubmit="return validateRep()" action="SetRepresentative" method="get">
                    <table id="RDlist" style="font-size:20px;">
                        <tr>
                            <th style="text-align:center;">Assigned Employee Name & ID</th>
                            <th> </th>
                        </tr>
                        <tr>
                            <td style="text-align:center;">
                                <div class="autocomplete dropdown" style="width:350px;">
                                    <div class="dropdown-content">
                                        <input style="font-size:16px;" id="repAuto" type="text" name="repname" placeholder="Please Select Representative...">
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="button-container">
                                    <button class="button button--size-m button--antiman button--round-m button--text-medium" type="submit" style="color:black;"><i></i><span>Assign</span></button>
                                </div>
                            </td>
                        </tr>
                    </table>
                </form>

            </div>
        </div>
        <p id="returnMessageR"  style="color:red;">@returnMessageR</p>
        <p id="returnMessageA"  style="color:red;">@returnMessageA</p>

        <script>
        /*An array containing all the country names in the world:*/
        @using ADProjGp2_LogicUStationeryStore.BusinessLogic
        @{ CommonBusinessLogic bizLogic = new CommonBusinessLogic();}
        var trylist = @Html.Raw(Json.Encode(bizLogic.PrepareEmployeeMenu(Model, Session["EmployeeID"].ToString(), Session)));
        /*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
            autocomplete(document.getElementById("authPAuto"), trylist);
            autocomplete(document.getElementById("repAuto"), trylist);

            //Set how to return MsgR
            var returnMessageR = document.getElementById("returnMessageR");
            if (returnMessageR.innerHTML != "") {
                    returnMessageR.removeAttribute("hidden")
                    setInterval(' returnMessageR.innerHTML=""; returnMessageR.setAttribute("hidden", "hidden");', 4000);
            } else {
                    returnMessageR.setAttribute("hidden", "hidden");
            }
            //Set how to return MsgA
            var returnMessageA = document.getElementById("returnMessageA");
            if (returnMessageA.innerHTML!= "") {
                returnMessageA.removeAttribute("hidden")
                setInterval('returnMessageA.innerHTML = ""; returnMessageA.setAttribute("hidden", "hidden");', 4000);
            } else {
                returnMessageA.setAttribute("hidden", "hidden");
            }
        </script>
    </body>
</html>

